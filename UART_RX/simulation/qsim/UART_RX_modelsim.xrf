vendor_name = ModelSim
source_file = 1, D:/all/3rdyear/term1/High level Design/VHDL_Code/UART_RX/UART_RX.vhd
source_file = 1, D:/all/3rdyear/term1/High level Design/VHDL_Code/UART_RX/Waveform.vwf
source_file = 1, D:/all/3rdyear/term1/High level Design/VHDL_Code/UART_RX/Waveform1.vwf
source_file = 1, d:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, d:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, d:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, d:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, D:/all/3rdyear/term1/High level Design/VHDL_Code/UART_RX/db/UART_RX.cbx.xml
design_name = UART_RX
instance = comp, \req_o~output\, req_o~output, UART_RX, 1
instance = comp, \data_o[0]~output\, data_o[0]~output, UART_RX, 1
instance = comp, \data_o[1]~output\, data_o[1]~output, UART_RX, 1
instance = comp, \data_o[2]~output\, data_o[2]~output, UART_RX, 1
instance = comp, \data_o[3]~output\, data_o[3]~output, UART_RX, 1
instance = comp, \data_o[4]~output\, data_o[4]~output, UART_RX, 1
instance = comp, \data_o[5]~output\, data_o[5]~output, UART_RX, 1
instance = comp, \data_o[6]~output\, data_o[6]~output, UART_RX, 1
instance = comp, \data_o[7]~output\, data_o[7]~output, UART_RX, 1
instance = comp, \sampling_rx~output\, sampling_rx~output, UART_RX, 1
instance = comp, \clk_i~input\, clk_i~input, UART_RX, 1
instance = comp, \rst_i~input\, rst_i~input, UART_RX, 1
instance = comp, \rx~input\, rx~input, UART_RX, 1
instance = comp, \Selector7~2\, Selector7~2, UART_RX, 1
instance = comp, \state~13\, state~13, UART_RX, 1
instance = comp, \state~20\, state~20, UART_RX, 1
instance = comp, \state~19\, state~19, UART_RX, 1
instance = comp, \state.WAIT_HALF_BIT\, state.WAIT_HALF_BIT, UART_RX, 1
instance = comp, \baudrate_counter[0]~0\, baudrate_counter[0]~0, UART_RX, 1
instance = comp, \baudrate_counter[0]~4\, baudrate_counter[0]~4, UART_RX, 1
instance = comp, \baudrate_counter[0]\, baudrate_counter[0], UART_RX, 1
instance = comp, \baudrate_counter[1]~5\, baudrate_counter[1]~5, UART_RX, 1
instance = comp, \baudrate_counter[1]\, baudrate_counter[1], UART_RX, 1
instance = comp, \state~14\, state~14, UART_RX, 1
instance = comp, \state~15\, state~15, UART_RX, 1
instance = comp, \state~17\, state~17, UART_RX, 1
instance = comp, \state.WAIT_FOR_RX_START\, state.WAIT_FOR_RX_START, UART_RX, 1
instance = comp, \baudrate_counter[2]~1\, baudrate_counter[2]~1, UART_RX, 1
instance = comp, \baudrate_counter[2]~2\, baudrate_counter[2]~2, UART_RX, 1
instance = comp, \state~18\, state~18, UART_RX, 1
instance = comp, \state.RECEIVE_BITS\, state.RECEIVE_BITS, UART_RX, 1
instance = comp, \baudrate_counter[2]~3\, baudrate_counter[2]~3, UART_RX, 1
instance = comp, \baudrate_counter[2]\, baudrate_counter[2], UART_RX, 1
instance = comp, \Equal1~0\, Equal1~0, UART_RX, 1
instance = comp, \bit_counter[2]~4\, bit_counter[2]~4, UART_RX, 1
instance = comp, \bit_counter[2]\, bit_counter[2], UART_RX, 1
instance = comp, \bit_counter[0]~0\, bit_counter[0]~0, UART_RX, 1
instance = comp, \bit_counter[0]~1\, bit_counter[0]~1, UART_RX, 1
instance = comp, \bit_counter[0]~2\, bit_counter[0]~2, UART_RX, 1
instance = comp, \bit_counter[0]\, bit_counter[0], UART_RX, 1
instance = comp, \bit_counter[1]~3\, bit_counter[1]~3, UART_RX, 1
instance = comp, \bit_counter[1]\, bit_counter[1], UART_RX, 1
instance = comp, \Add1~0\, Add1~0, UART_RX, 1
instance = comp, \state~12\, state~12, UART_RX, 1
instance = comp, \state~16\, state~16, UART_RX, 1
instance = comp, \state.WAIT_FOR_STOP_BIT\, state.WAIT_FOR_STOP_BIT, UART_RX, 1
instance = comp, \Selector7~0\, Selector7~0, UART_RX, 1
instance = comp, \Selector7~1\, Selector7~1, UART_RX, 1
instance = comp, \req_o~reg0\, req_o~reg0, UART_RX, 1
instance = comp, \receive_register[0]~0\, receive_register[0]~0, UART_RX, 1
instance = comp, \receive_register[7]\, receive_register[7], UART_RX, 1
instance = comp, \receive_register[6]\, receive_register[6], UART_RX, 1
instance = comp, \receive_register[5]\, receive_register[5], UART_RX, 1
instance = comp, \receive_register[4]\, receive_register[4], UART_RX, 1
instance = comp, \receive_register[3]\, receive_register[3], UART_RX, 1
instance = comp, \receive_register[2]\, receive_register[2], UART_RX, 1
instance = comp, \receive_register[1]\, receive_register[1], UART_RX, 1
instance = comp, \receive_register[0]\, receive_register[0], UART_RX, 1
instance = comp, \data_o~0\, data_o~0, UART_RX, 1
instance = comp, \data_o[0]~1\, data_o[0]~1, UART_RX, 1
instance = comp, \data_o[0]~reg0\, data_o[0]~reg0, UART_RX, 1
instance = comp, \data_o~2\, data_o~2, UART_RX, 1
instance = comp, \data_o[1]~reg0\, data_o[1]~reg0, UART_RX, 1
instance = comp, \data_o~3\, data_o~3, UART_RX, 1
instance = comp, \data_o[2]~reg0\, data_o[2]~reg0, UART_RX, 1
instance = comp, \data_o~4\, data_o~4, UART_RX, 1
instance = comp, \data_o[3]~reg0\, data_o[3]~reg0, UART_RX, 1
instance = comp, \data_o~5\, data_o~5, UART_RX, 1
instance = comp, \data_o[4]~reg0\, data_o[4]~reg0, UART_RX, 1
instance = comp, \data_o~6\, data_o~6, UART_RX, 1
instance = comp, \data_o[5]~reg0\, data_o[5]~reg0, UART_RX, 1
instance = comp, \data_o~7\, data_o~7, UART_RX, 1
instance = comp, \data_o[6]~reg0\, data_o[6]~reg0, UART_RX, 1
instance = comp, \data_o~8\, data_o~8, UART_RX, 1
instance = comp, \data_o[7]~reg0\, data_o[7]~reg0, UART_RX, 1
instance = comp, \sampling_rx~0\, sampling_rx~0, UART_RX, 1
instance = comp, \sampling_rx~reg0\, sampling_rx~reg0, UART_RX, 1
