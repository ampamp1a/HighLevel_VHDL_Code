|UART_controller2
Clk_i => uart_rx:UartRx.clk_i
Clk_i => ram:Ram.clock
Clk_i => uart_tx:UartTx.clk_i
CRX => uart_rx:UartRx.rx
Q <= uart_tx:UartTx.tx
dt[0] <= ram:Ram.q[0]
dt[1] <= ram:Ram.q[1]
dt[2] <= ram:Ram.q[2]
dt[3] <= ram:Ram.q[3]
dt[4] <= ram:Ram.q[4]
dt[5] <= ram:Ram.q[5]
dt[6] <= ram:Ram.q[6]
dt[7] <= ram:Ram.q[7]
test <= uart_rx:UartRx.sending


|UART_controller2|UART_RX:UartRx
clk_i => RWrData[0]~reg0.CLK
clk_i => RWrData[1]~reg0.CLK
clk_i => RWrData[2]~reg0.CLK
clk_i => RWrData[3]~reg0.CLK
clk_i => RWrData[4]~reg0.CLK
clk_i => RWrData[5]~reg0.CLK
clk_i => RWrData[6]~reg0.CLK
clk_i => RWrData[7]~reg0.CLK
clk_i => RADDR[0]~reg0.CLK
clk_i => RADDR[1]~reg0.CLK
clk_i => RADDR[2]~reg0.CLK
clk_i => RADDR[3]~reg0.CLK
clk_i => RADDR[4]~reg0.CLK
clk_i => RADDR[5]~reg0.CLK
clk_i => RADDR[6]~reg0.CLK
clk_i => RADDR[7]~reg0.CLK
clk_i => sending~reg0.CLK
clk_i => RamAclr~reg0.CLK
clk_i => n.CLK
clk_i => RWr~reg0.CLK
clk_i => sampling_rx~reg0.CLK
clk_i => receive_register[0].CLK
clk_i => receive_register[1].CLK
clk_i => receive_register[2].CLK
clk_i => receive_register[3].CLK
clk_i => receive_register[4].CLK
clk_i => receive_register[5].CLK
clk_i => receive_register[6].CLK
clk_i => receive_register[7].CLK
clk_i => bit_counter[0].CLK
clk_i => bit_counter[1].CLK
clk_i => bit_counter[2].CLK
clk_i => baudrate_counter[0].CLK
clk_i => baudrate_counter[1].CLK
clk_i => baudrate_counter[2].CLK
clk_i => timeout[0].CLK
clk_i => timeout[1].CLK
clk_i => timeout[2].CLK
clk_i => timeout[3].CLK
clk_i => timeout[4].CLK
clk_i => timeout[5].CLK
clk_i => timeout[6].CLK
clk_i => timeout[7].CLK
clk_i => timeout[8].CLK
clk_i => timeout[9].CLK
clk_i => timeout[10].CLK
clk_i => timeout[11].CLK
clk_i => timeout[12].CLK
clk_i => timeout[13].CLK
clk_i => timeout[14].CLK
clk_i => timeout[15].CLK
clk_i => timeout[16].CLK
clk_i => timeout[17].CLK
clk_i => timeout[18].CLK
clk_i => timeout[19].CLK
clk_i => timeout[20].CLK
clk_i => timeout[21].CLK
clk_i => timeout[22].CLK
clk_i => timeout[23].CLK
clk_i => timeout[24].CLK
clk_i => timeout[25].CLK
clk_i => timeout[26].CLK
clk_i => timeout[27].CLK
clk_i => timeout[28].CLK
clk_i => timeout[29].CLK
clk_i => timeout[30].CLK
clk_i => timeout[31].CLK
clk_i => req_o~reg0.CLK
clk_i => get_state~5.DATAIN
clk_i => state~5.DATAIN
rst_i => state.OUTPUTSELECT
rst_i => state.OUTPUTSELECT
rst_i => state.OUTPUTSELECT
rst_i => state.OUTPUTSELECT
rst_i => req_o.OUTPUTSELECT
rst_i => get_state.OUTPUTSELECT
rst_i => get_state.OUTPUTSELECT
rst_i => get_state.OUTPUTSELECT
rst_i => get_state.OUTPUTSELECT
rst_i => RADDR[3]~reg0.ENA
rst_i => RADDR[2]~reg0.ENA
rst_i => RADDR[1]~reg0.ENA
rst_i => RADDR[0]~reg0.ENA
rst_i => RWrData[7]~reg0.ENA
rst_i => RWrData[6]~reg0.ENA
rst_i => RWrData[5]~reg0.ENA
rst_i => RWrData[4]~reg0.ENA
rst_i => RWrData[3]~reg0.ENA
rst_i => RWrData[2]~reg0.ENA
rst_i => RWrData[1]~reg0.ENA
rst_i => RWrData[0]~reg0.ENA
rst_i => RADDR[4]~reg0.ENA
rst_i => RADDR[5]~reg0.ENA
rst_i => RADDR[6]~reg0.ENA
rst_i => RADDR[7]~reg0.ENA
rst_i => sending~reg0.ENA
rst_i => RamAclr~reg0.ENA
rst_i => n.ENA
rst_i => RWr~reg0.ENA
rst_i => sampling_rx~reg0.ENA
rst_i => receive_register[0].ENA
rst_i => receive_register[1].ENA
rst_i => receive_register[2].ENA
rst_i => receive_register[3].ENA
rst_i => receive_register[4].ENA
rst_i => receive_register[5].ENA
rst_i => receive_register[6].ENA
rst_i => receive_register[7].ENA
rst_i => bit_counter[0].ENA
rst_i => bit_counter[1].ENA
rst_i => bit_counter[2].ENA
rst_i => baudrate_counter[0].ENA
rst_i => baudrate_counter[1].ENA
rst_i => baudrate_counter[2].ENA
rst_i => timeout[0].ENA
rst_i => timeout[1].ENA
rst_i => timeout[2].ENA
rst_i => timeout[3].ENA
rst_i => timeout[4].ENA
rst_i => timeout[5].ENA
rst_i => timeout[6].ENA
rst_i => timeout[7].ENA
rst_i => timeout[8].ENA
rst_i => timeout[9].ENA
rst_i => timeout[10].ENA
rst_i => timeout[11].ENA
rst_i => timeout[12].ENA
rst_i => timeout[13].ENA
rst_i => timeout[14].ENA
rst_i => timeout[15].ENA
rst_i => timeout[16].ENA
rst_i => timeout[17].ENA
rst_i => timeout[18].ENA
rst_i => timeout[19].ENA
rst_i => timeout[20].ENA
rst_i => timeout[21].ENA
rst_i => timeout[22].ENA
rst_i => timeout[23].ENA
rst_i => timeout[24].ENA
rst_i => timeout[25].ENA
rst_i => timeout[26].ENA
rst_i => timeout[27].ENA
rst_i => timeout[28].ENA
rst_i => timeout[29].ENA
rst_i => timeout[30].ENA
rst_i => timeout[31].ENA
req_o <= req_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
sampling_rx <= sampling_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx => receive_register.DATAB
rx => req_o.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => get_state.OUTPUTSELECT
rx => get_state.OUTPUTSELECT
rx => get_state.OUTPUTSELECT
rx => get_state.OUTPUTSELECT
rx => RWr.OUTPUTSELECT
rx => n.OUTPUTSELECT
rx => RamAclr.OUTPUTSELECT
rx => sending.OUTPUTSELECT
rx => RADDR.OUTPUTSELECT
rx => RADDR.OUTPUTSELECT
rx => RADDR.OUTPUTSELECT
rx => RADDR.OUTPUTSELECT
rx => RADDR.OUTPUTSELECT
rx => RADDR.OUTPUTSELECT
rx => RADDR.OUTPUTSELECT
rx => RADDR.OUTPUTSELECT
rx => RWrData.OUTPUTSELECT
rx => RWrData.OUTPUTSELECT
rx => RWrData.OUTPUTSELECT
rx => RWrData.OUTPUTSELECT
rx => RWrData.OUTPUTSELECT
rx => RWrData.OUTPUTSELECT
rx => RWrData.OUTPUTSELECT
rx => RWrData.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => timeout.OUTPUTSELECT
rx => baudrate_counter.OUTPUTSELECT
rx => baudrate_counter.OUTPUTSELECT
rx => baudrate_counter.OUTPUTSELECT
rx => req_o.OUTPUTSELECT
rx => get_state.OUTPUTSELECT
rx => get_state.OUTPUTSELECT
rx => get_state.OUTPUTSELECT
rx => get_state.OUTPUTSELECT
RADDR[0] <= RADDR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RADDR[1] <= RADDR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RADDR[2] <= RADDR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RADDR[3] <= RADDR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RADDR[4] <= RADDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RADDR[5] <= RADDR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RADDR[6] <= RADDR[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RADDR[7] <= RADDR[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWr <= RWr~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWrData[0] <= RWrData[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWrData[1] <= RWrData[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWrData[2] <= RWrData[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWrData[3] <= RWrData[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWrData[4] <= RWrData[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWrData[5] <= RWrData[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWrData[6] <= RWrData[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RWrData[7] <= RWrData[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RamAclr <= RamAclr~reg0.DB_MAX_OUTPUT_PORT_TYPE
sending <= sending~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_controller2|RAM:Ram
aclr => altsyncram:altsyncram_component.aclr0
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
clock => altsyncram:altsyncram_component.clock0
data[0] => altsyncram:altsyncram_component.data_a[0]
data[1] => altsyncram:altsyncram_component.data_a[1]
data[2] => altsyncram:altsyncram_component.data_a[2]
data[3] => altsyncram:altsyncram_component.data_a[3]
data[4] => altsyncram:altsyncram_component.data_a[4]
data[5] => altsyncram:altsyncram_component.data_a[5]
data[6] => altsyncram:altsyncram_component.data_a[6]
data[7] => altsyncram:altsyncram_component.data_a[7]
wren => altsyncram:altsyncram_component.wren_a
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]


|UART_controller2|RAM:Ram|altsyncram:altsyncram_component
wren_a => altsyncram_g3p3:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_g3p3:auto_generated.data_a[0]
data_a[1] => altsyncram_g3p3:auto_generated.data_a[1]
data_a[2] => altsyncram_g3p3:auto_generated.data_a[2]
data_a[3] => altsyncram_g3p3:auto_generated.data_a[3]
data_a[4] => altsyncram_g3p3:auto_generated.data_a[4]
data_a[5] => altsyncram_g3p3:auto_generated.data_a[5]
data_a[6] => altsyncram_g3p3:auto_generated.data_a[6]
data_a[7] => altsyncram_g3p3:auto_generated.data_a[7]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_g3p3:auto_generated.address_a[0]
address_a[1] => altsyncram_g3p3:auto_generated.address_a[1]
address_a[2] => altsyncram_g3p3:auto_generated.address_a[2]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_g3p3:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => altsyncram_g3p3:auto_generated.aclr0
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_g3p3:auto_generated.q_a[0]
q_a[1] <= altsyncram_g3p3:auto_generated.q_a[1]
q_a[2] <= altsyncram_g3p3:auto_generated.q_a[2]
q_a[3] <= altsyncram_g3p3:auto_generated.q_a[3]
q_a[4] <= altsyncram_g3p3:auto_generated.q_a[4]
q_a[5] <= altsyncram_g3p3:auto_generated.q_a[5]
q_a[6] <= altsyncram_g3p3:auto_generated.q_a[6]
q_a[7] <= altsyncram_g3p3:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|UART_controller2|RAM:Ram|altsyncram:altsyncram_component|altsyncram_g3p3:auto_generated
aclr0 => ram_block1a0.CLR0
aclr0 => ram_block1a1.CLR0
aclr0 => ram_block1a2.CLR0
aclr0 => ram_block1a3.CLR0
aclr0 => ram_block1a4.CLR0
aclr0 => ram_block1a5.CLR0
aclr0 => ram_block1a6.CLR0
aclr0 => ram_block1a7.CLR0
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE


|UART_controller2|UART_TX:UartTx
clk_i => baudrate_counter[0].CLK
clk_i => baudrate_counter[1].CLK
clk_i => baudrate_counter[2].CLK
clk_i => sending_register[9].CLK
clk_i => bit_counter[0].CLK
clk_i => bit_counter[1].CLK
clk_i => bit_counter[2].CLK
clk_i => bit_counter[3].CLK
clk_i => send_pause.CLK
clk_i => tx~reg0.CLK
clk_i => state~5.DATAIN
rst_i => state.OUTPUTSELECT
rst_i => state.OUTPUTSELECT
rst_i => state.OUTPUTSELECT
rst_i => state.OUTPUTSELECT
rst_i => tx.OUTPUTSELECT
rst_i => bit_counter[1].ENA
rst_i => bit_counter[0].ENA
rst_i => sending_register[9].ENA
rst_i => baudrate_counter[2].ENA
rst_i => baudrate_counter[1].ENA
rst_i => baudrate_counter[0].ENA
rst_i => bit_counter[2].ENA
rst_i => bit_counter[3].ENA
rst_i => send_pause.ENA
send_data => state.OUTPUTSELECT
send_data => state.OUTPUTSELECT
send_data => state.OUTPUTSELECT
send_data => state.OUTPUTSELECT
send_data => tx.OUTPUTSELECT
send_data => bit_counter.OUTPUTSELECT
send_data => bit_counter.OUTPUTSELECT
send_data => bit_counter.OUTPUTSELECT
send_data => bit_counter.OUTPUTSELECT
send_data => sending_register.OUTPUTSELECT
send_data => baudrate_counter.OUTPUTSELECT
send_data => baudrate_counter.OUTPUTSELECT
send_data => baudrate_counter.OUTPUTSELECT
send_data => send_pause.DATAB
Data_TX[0] => Mux0.IN7
Data_TX[1] => Mux0.IN6
Data_TX[2] => Mux0.IN5
Data_TX[3] => Mux0.IN4
Data_TX[4] => Mux0.IN3
Data_TX[5] => Mux0.IN2
Data_TX[6] => Mux0.IN1
Data_TX[7] => Mux0.IN0
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


